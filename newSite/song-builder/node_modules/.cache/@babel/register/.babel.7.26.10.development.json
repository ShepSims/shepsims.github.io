{"{\"assumptions\":{},\"sourceRoot\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder\",\"filename\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/tests/setup-db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$2\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$15\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.26.10:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _supabaseJs = require(\"@supabase/supabase-js\");\nvar _config = require(\"../config\");\nconst supabase = (0, _supabaseJs.createClient)(_config.SUPABASE_URL, _config.SUPABASE_ANON_KEY);\n\n// SQL for creating the tables if they don't exist\nconst createTablesSQL = `\n-- Create extension for UUID generation if it doesn't exist\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n-- Create user_settings table if it doesn't exist\nCREATE TABLE IF NOT EXISTS user_settings (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  settings jsonb NOT NULL DEFAULT '{}'::jsonb,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  UNIQUE(user_id)\n);\n\n-- Create songs table if it doesn't exist\nCREATE TABLE IF NOT EXISTS songs (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  title text NOT NULL,\n  data jsonb NOT NULL,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL\n);\n\n-- Enable Row Level Security\nALTER TABLE IF EXISTS user_settings ENABLE ROW LEVEL SECURITY;\nALTER TABLE IF EXISTS songs ENABLE ROW LEVEL SECURITY;\n\n-- Create policies (wrapped in DO block to handle errors)\nDO $$ \nBEGIN\n  -- User settings policies\n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'user_settings' AND policyname = 'Users can read their own settings'\n  ) THEN\n    CREATE POLICY \"Users can read their own settings\"\n      ON user_settings FOR SELECT\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'user_settings' AND policyname = 'Users can update their own settings'\n  ) THEN\n    CREATE POLICY \"Users can update their own settings\"\n      ON user_settings FOR UPDATE\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'user_settings' AND policyname = 'Users can insert their own settings'\n  ) THEN\n    CREATE POLICY \"Users can insert their own settings\"\n      ON user_settings FOR INSERT\n      WITH CHECK (auth.uid() = user_id);\n  END IF;\n  \n  -- Songs policies\n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can read their own songs'\n  ) THEN\n    CREATE POLICY \"Users can read their own songs\"\n      ON songs FOR SELECT\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can update their own songs'\n  ) THEN\n    CREATE POLICY \"Users can update their own songs\"\n      ON songs FOR UPDATE\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can insert their own songs'\n  ) THEN\n    CREATE POLICY \"Users can insert their own songs\"\n      ON songs FOR INSERT\n      WITH CHECK (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can delete their own songs'\n  ) THEN\n    CREATE POLICY \"Users can delete their own songs\"\n      ON songs FOR DELETE\n      USING (auth.uid() = user_id);\n  END IF;\n\nEXCEPTION\n  WHEN OTHERS THEN\n    RAISE NOTICE 'Error creating policies: %', SQLERRM;\nEND $$;\n`;\n\n// Split the SQL into separate statements for better error handling\nconst createExtensionSQL = `CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";`;\nconst createUserSettingsTableSQL = `\nCREATE TABLE IF NOT EXISTS user_settings (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  settings jsonb NOT NULL DEFAULT '{}'::jsonb,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  UNIQUE(user_id)\n);\n`;\nconst createSongsTableSQL = `\nCREATE TABLE IF NOT EXISTS songs (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  title text NOT NULL,\n  data jsonb NOT NULL,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL\n);\n`;\nconst enableRLSSQL = `\nALTER TABLE IF EXISTS user_settings ENABLE ROW LEVEL SECURITY;\nALTER TABLE IF EXISTS songs ENABLE ROW LEVEL SECURITY;\n`;\nasync function setupDatabase() {\n  try {\n    console.log('Creating uuid-ossp extension...');\n    const {\n      error: extensionError\n    } = await supabase.rpc('pgx_exec', {\n      sql: createExtensionSQL\n    });\n    if (extensionError) {\n      console.error('Error creating extension:', extensionError);\n      // Continue anyway, it might already exist\n    }\n    console.log('Creating user_settings table...');\n    const {\n      error: userSettingsError\n    } = await supabase.rpc('pgx_exec', {\n      sql: createUserSettingsTableSQL\n    });\n    if (userSettingsError) {\n      console.error('Error creating user_settings table:', userSettingsError);\n      return {\n        success: false,\n        error: userSettingsError\n      };\n    }\n    console.log('Creating songs table...');\n    const {\n      error: songsError\n    } = await supabase.rpc('pgx_exec', {\n      sql: createSongsTableSQL\n    });\n    if (songsError) {\n      console.error('Error creating songs table:', songsError);\n      return {\n        success: false,\n        error: songsError\n      };\n    }\n    console.log('Enabling Row Level Security...');\n    const {\n      error: rlsError\n    } = await supabase.rpc('pgx_exec', {\n      sql: enableRLSSQL\n    });\n    if (rlsError) {\n      console.error('Error enabling RLS:', rlsError);\n      // Continue anyway\n    }\n    console.log('Database tables created successfully');\n    return {\n      success: true\n    };\n  } catch (err) {\n    console.error('Unexpected error setting up database:', err);\n    return {\n      success: false,\n      error: err\n    };\n  }\n}\n\n// Run the setup if this script is executed directly\nif (require.main === module) {\n  setupDatabase().then(result => {\n    if (result.success) {\n      console.log('Database setup complete');\n    } else {\n      console.error('Database setup failed:', result.error);\n      process.exit(1);\n    }\n  }).catch(err => {\n    console.error('Error in setup process:', err);\n    process.exit(1);\n  });\n}\nvar _default = exports.default = setupDatabase;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_supabaseJs","require","_config","supabase","createClient","SUPABASE_URL","SUPABASE_ANON_KEY","createTablesSQL","createExtensionSQL","createUserSettingsTableSQL","createSongsTableSQL","enableRLSSQL","setupDatabase","console","log","error","extensionError","rpc","sql","userSettingsError","success","songsError","rlsError","err","main","module","then","result","process","exit","catch","_default","exports","default"],"sourceRoot":"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/tests/","sources":["setup-db.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport { SUPABASE_URL, SUPABASE_ANON_KEY } from '../config';\n\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\n// SQL for creating the tables if they don't exist\nconst createTablesSQL = `\n-- Create extension for UUID generation if it doesn't exist\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n-- Create user_settings table if it doesn't exist\nCREATE TABLE IF NOT EXISTS user_settings (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  settings jsonb NOT NULL DEFAULT '{}'::jsonb,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  UNIQUE(user_id)\n);\n\n-- Create songs table if it doesn't exist\nCREATE TABLE IF NOT EXISTS songs (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  title text NOT NULL,\n  data jsonb NOT NULL,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL\n);\n\n-- Enable Row Level Security\nALTER TABLE IF EXISTS user_settings ENABLE ROW LEVEL SECURITY;\nALTER TABLE IF EXISTS songs ENABLE ROW LEVEL SECURITY;\n\n-- Create policies (wrapped in DO block to handle errors)\nDO $$ \nBEGIN\n  -- User settings policies\n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'user_settings' AND policyname = 'Users can read their own settings'\n  ) THEN\n    CREATE POLICY \"Users can read their own settings\"\n      ON user_settings FOR SELECT\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'user_settings' AND policyname = 'Users can update their own settings'\n  ) THEN\n    CREATE POLICY \"Users can update their own settings\"\n      ON user_settings FOR UPDATE\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'user_settings' AND policyname = 'Users can insert their own settings'\n  ) THEN\n    CREATE POLICY \"Users can insert their own settings\"\n      ON user_settings FOR INSERT\n      WITH CHECK (auth.uid() = user_id);\n  END IF;\n  \n  -- Songs policies\n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can read their own songs'\n  ) THEN\n    CREATE POLICY \"Users can read their own songs\"\n      ON songs FOR SELECT\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can update their own songs'\n  ) THEN\n    CREATE POLICY \"Users can update their own songs\"\n      ON songs FOR UPDATE\n      USING (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can insert their own songs'\n  ) THEN\n    CREATE POLICY \"Users can insert their own songs\"\n      ON songs FOR INSERT\n      WITH CHECK (auth.uid() = user_id);\n  END IF;\n  \n  IF NOT EXISTS (\n    SELECT FROM pg_policies WHERE tablename = 'songs' AND policyname = 'Users can delete their own songs'\n  ) THEN\n    CREATE POLICY \"Users can delete their own songs\"\n      ON songs FOR DELETE\n      USING (auth.uid() = user_id);\n  END IF;\n\nEXCEPTION\n  WHEN OTHERS THEN\n    RAISE NOTICE 'Error creating policies: %', SQLERRM;\nEND $$;\n`;\n\n// Split the SQL into separate statements for better error handling\nconst createExtensionSQL = `CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";`;\n\nconst createUserSettingsTableSQL = `\nCREATE TABLE IF NOT EXISTS user_settings (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  settings jsonb NOT NULL DEFAULT '{}'::jsonb,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  UNIQUE(user_id)\n);\n`;\n\nconst createSongsTableSQL = `\nCREATE TABLE IF NOT EXISTS songs (\n  id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,\n  user_id uuid NOT NULL,\n  title text NOT NULL,\n  data jsonb NOT NULL,\n  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,\n  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL\n);\n`;\n\nconst enableRLSSQL = `\nALTER TABLE IF EXISTS user_settings ENABLE ROW LEVEL SECURITY;\nALTER TABLE IF EXISTS songs ENABLE ROW LEVEL SECURITY;\n`;\n\nasync function setupDatabase() {\n  try {\n    console.log('Creating uuid-ossp extension...');\n    const { error: extensionError } = await supabase.rpc('pgx_exec', { sql: createExtensionSQL });\n    if (extensionError) {\n      console.error('Error creating extension:', extensionError);\n      // Continue anyway, it might already exist\n    }\n\n    console.log('Creating user_settings table...');\n    const { error: userSettingsError } = await supabase.rpc('pgx_exec', { sql: createUserSettingsTableSQL });\n    if (userSettingsError) {\n      console.error('Error creating user_settings table:', userSettingsError);\n      return { success: false, error: userSettingsError };\n    }\n\n    console.log('Creating songs table...');\n    const { error: songsError } = await supabase.rpc('pgx_exec', { sql: createSongsTableSQL });\n    if (songsError) {\n      console.error('Error creating songs table:', songsError);\n      return { success: false, error: songsError };\n    }\n\n    console.log('Enabling Row Level Security...');\n    const { error: rlsError } = await supabase.rpc('pgx_exec', { sql: enableRLSSQL });\n    if (rlsError) {\n      console.error('Error enabling RLS:', rlsError);\n      // Continue anyway\n    }\n    \n    console.log('Database tables created successfully');\n    return { success: true };\n  } catch (err) {\n    console.error('Unexpected error setting up database:', err);\n    return { success: false, error: err };\n  }\n}\n\n// Run the setup if this script is executed directly\nif (require.main === module) {\n  setupDatabase()\n    .then(result => {\n      if (result.success) {\n        console.log('Database setup complete');\n      } else {\n        console.error('Database setup failed:', result.error);\n        process.exit(1);\n      }\n    })\n    .catch(err => {\n      console.error('Error in setup process:', err);\n      process.exit(1);\n    });\n}\n\nexport default setupDatabase; "],"mappings":";;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,MAAME,QAAQ,GAAG,IAAAC,wBAAY,EAACC,oBAAY,EAAEC,yBAAiB,CAAC;;AAE9D;AACA,MAAMC,eAAe,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAG,6CAA6C;AAExE,MAAMC,0BAA0B,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,mBAAmB,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,YAAY,GAAG;AACrB;AACA;AACA,CAAC;AAED,eAAeC,aAAaA,CAAA,EAAG;EAC7B,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,MAAM;MAAEC,KAAK,EAAEC;IAAe,CAAC,GAAG,MAAMb,QAAQ,CAACc,GAAG,CAAC,UAAU,EAAE;MAAEC,GAAG,EAAEV;IAAmB,CAAC,CAAC;IAC7F,IAAIQ,cAAc,EAAE;MAClBH,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEC,cAAc,CAAC;MAC1D;IACF;IAEAH,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,MAAM;MAAEC,KAAK,EAAEI;IAAkB,CAAC,GAAG,MAAMhB,QAAQ,CAACc,GAAG,CAAC,UAAU,EAAE;MAAEC,GAAG,EAAET;IAA2B,CAAC,CAAC;IACxG,IAAIU,iBAAiB,EAAE;MACrBN,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEI,iBAAiB,CAAC;MACvE,OAAO;QAAEC,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEI;MAAkB,CAAC;IACrD;IAEAN,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,MAAM;MAAEC,KAAK,EAAEM;IAAW,CAAC,GAAG,MAAMlB,QAAQ,CAACc,GAAG,CAAC,UAAU,EAAE;MAAEC,GAAG,EAAER;IAAoB,CAAC,CAAC;IAC1F,IAAIW,UAAU,EAAE;MACdR,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEM,UAAU,CAAC;MACxD,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEM;MAAW,CAAC;IAC9C;IAEAR,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,MAAM;MAAEC,KAAK,EAAEO;IAAS,CAAC,GAAG,MAAMnB,QAAQ,CAACc,GAAG,CAAC,UAAU,EAAE;MAAEC,GAAG,EAAEP;IAAa,CAAC,CAAC;IACjF,IAAIW,QAAQ,EAAE;MACZT,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEO,QAAQ,CAAC;MAC9C;IACF;IAEAT,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnD,OAAO;MAAEM,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZV,OAAO,CAACE,KAAK,CAAC,uCAAuC,EAAEQ,GAAG,CAAC;IAC3D,OAAO;MAAEH,OAAO,EAAE,KAAK;MAAEL,KAAK,EAAEQ;IAAI,CAAC;EACvC;AACF;;AAEA;AACA,IAAItB,OAAO,CAACuB,IAAI,KAAKC,MAAM,EAAE;EAC3Bb,aAAa,CAAC,CAAC,CACZc,IAAI,CAACC,MAAM,IAAI;IACd,IAAIA,MAAM,CAACP,OAAO,EAAE;MAClBP,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,MAAM;MACLD,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEY,MAAM,CAACZ,KAAK,CAAC;MACrDa,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,CAAC,CACDC,KAAK,CAACP,GAAG,IAAI;IACZV,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEQ,GAAG,CAAC;IAC7CK,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;AACN;AAAC,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcrB,aAAa","ignoreList":[]}},"mtime":1744415041781},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder\",\"filename\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$2\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$15\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.26.10:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SUPABASE_URL = exports.SUPABASE_ANON_KEY = void 0;\nconst SUPABASE_URL = exports.SUPABASE_URL = 'https://arjepkzollnkwhidudtp.supabase.co';\n\n// To find your anon key:\n// 1. Go to your Supabase project dashboard (https://app.supabase.com)\n// 2. Click on \"Settings\" in the left sidebar\n// 3. Click on \"API\" under Project Settings\n// 4. Copy the \"anon public\" key (under Project API keys)\nconst SUPABASE_ANON_KEY = exports.SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFyamVwa3pvbGxua3doaWR1ZHRwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTY5OTUxNDIsImV4cCI6MjAzMjU3MTE0Mn0.E8-Tms9P4RRpDWe09hhSGrh1mZjdR8gCGWBwKP6QxqI';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTVVBBQkFTRV9VUkwiLCJleHBvcnRzIiwiU1VQQUJBU0VfQU5PTl9LRVkiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9tYWMvRGVza3RvcC9naXQvc2hlcHNpbXMuZ2l0aHViLmlvL25ld1NpdGUvc29uZy1idWlsZGVyLyIsInNvdXJjZXMiOlsiY29uZmlnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNVUEFCQVNFX1VSTCA9ICdodHRwczovL2FyamVwa3pvbGxua3doaWR1ZHRwLnN1cGFiYXNlLmNvJztcblxuLy8gVG8gZmluZCB5b3VyIGFub24ga2V5OlxuLy8gMS4gR28gdG8geW91ciBTdXBhYmFzZSBwcm9qZWN0IGRhc2hib2FyZCAoaHR0cHM6Ly9hcHAuc3VwYWJhc2UuY29tKVxuLy8gMi4gQ2xpY2sgb24gXCJTZXR0aW5nc1wiIGluIHRoZSBsZWZ0IHNpZGViYXJcbi8vIDMuIENsaWNrIG9uIFwiQVBJXCIgdW5kZXIgUHJvamVjdCBTZXR0aW5nc1xuLy8gNC4gQ29weSB0aGUgXCJhbm9uIHB1YmxpY1wiIGtleSAodW5kZXIgUHJvamVjdCBBUEkga2V5cylcbmNvbnN0IFNVUEFCQVNFX0FOT05fS0VZID0gJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkltRnlhbVZ3YTNwdmJHeHVhM2RvYVdSMVpIUndJaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM01UWTVPVFV4TkRJc0ltVjRjQ0k2TWpBek1qVTNNVEUwTW4wLkU4LVRtczlQNFJScERXZTA5aGhTR3JoMW1aamRSOGdDR1dCd0tQNlF4cUknO1xuXG5leHBvcnQgeyBTVVBBQkFTRV9VUkwsIFNVUEFCQVNFX0FOT05fS0VZIH07ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsWUFBWSxHQUFBQyxPQUFBLENBQUFELFlBQUEsR0FBRywwQ0FBMEM7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNRSxpQkFBaUIsR0FBQUQsT0FBQSxDQUFBQyxpQkFBQSxHQUFHLGtOQUFrTiIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["SUPABASE_URL","exports","SUPABASE_ANON_KEY"],"sourceRoot":"/Users/mac/Desktop/git/shepsims.github.io/newSite/song-builder/","sources":["config.js"],"sourcesContent":["const SUPABASE_URL = 'https://arjepkzollnkwhidudtp.supabase.co';\n\n// To find your anon key:\n// 1. Go to your Supabase project dashboard (https://app.supabase.com)\n// 2. Click on \"Settings\" in the left sidebar\n// 3. Click on \"API\" under Project Settings\n// 4. Copy the \"anon public\" key (under Project API keys)\nconst SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFyamVwa3pvbGxua3doaWR1ZHRwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTY5OTUxNDIsImV4cCI6MjAzMjU3MTE0Mn0.E8-Tms9P4RRpDWe09hhSGrh1mZjdR8gCGWBwKP6QxqI';\n\nexport { SUPABASE_URL, SUPABASE_ANON_KEY }; "],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAAC,OAAA,CAAAD,YAAA,GAAG,0CAA0C;;AAE/D;AACA;AACA;AACA;AACA;AACA,MAAME,iBAAiB,GAAAD,OAAA,CAAAC,iBAAA,GAAG,kNAAkN","ignoreList":[]}},"mtime":1744414942011}}